---
- name: Run Terraform modules in sequence
  hosts: localhost
  tasks:

    - name: Initialize MSK module
      command: >
        terraform init
        -backend-config="bucket=vmanep-use1-terraform-creation"
        -backend-config="key=state-msk.tfstate"
        -backend-config="region=us-east-1"
        -backend-config="workspace_key_prefix=testfabrizio"
        -backend-config="dynamodb_table=vmanep-use1-terraform-creation"
      args:
        chdir: ../terraform/msk
    - name: Apply MSK module
      cloud.terraform.terraform:
        project_path: ../terraform/msk
        workspace: testfabrizio
        state: present        
        variables_files: ../../environment/tfvars/MSK.tfvars
      register: msk_outputs
    - debug: var=msk_outputs.stdout_lines
    - name: Initialize Elasticsearch module
      command: >
        terraform init
        -backend-config="bucket=vmanep-use1-terraform-creation"
        -backend-config="key=state-es.tfstate"
        -backend-config="region=us-east-1"
        -backend-config="workspace_key_prefix=testfabrizio"
        -backend-config="dynamodb_table=vmanep-use1-terraform-creation"
      args:
        chdir: ../terraform/es_os
    - name: Apply Elasticsearch module
      cloud.terraform.terraform:
        project_path: ../terraform/es_os
        workspace: testfabrizio
        state: present
        variables_files: ../../environment/tfvars/Elasticsearch.tfvars
      register: es_os_outputs
    - debug: var=es_os_outputs.stdout_lines
    - name: Remove existing kafka_conn_info block
      replace:
        path: tfvars/EKS.tfvars
        regexp: 'kafka_conn_info\s*=\s*\{(?:[^{}]*|\{[^{}]*\})*\}'
        replace: ''

    - name: Remove existing es_info block
      replace:
        path: tfvars/EKS.tfvars
        regexp: 'es_info = \{[^}]*\}'
        replace: ''

    - name: Create eks.tfvars with module outputs
      blockinfile:
        path: tfvars/EKS.tfvars
        block: |

          kafka_conn_info = {
            "MSK" = {
              kafka_provider        = "MSK"
              msk_security_group    = "{{ msk_outputs.outputs.msk_security_group.value }}"
              bootstrap_brokers_tls = "{{ msk_outputs.outputs.bootstrap_brokers_tls.value }}"
              access_key            = "N/A"
              secret_access_key     = "N/A"
              zookeeper_connect_string = "{{ msk_outputs.outputs.zookeeper_connect_string.value }}"
            }
          }

          es_info = {
            es_security_group  = ["{{ es_os_outputs.outputs.es_security_group.value }}"]
            es_private_subnets = ["subnet-0080a252cdef8fca8", "subnet-0fa1633be63514439"]
            es_log_endpoint    = "{{ es_os_outputs.outputs.endpoint.value }}"
            es_app_endpoint    = "null"
          }
    - name: Initialize EKS module
      command: >
        terraform init
        -backend-config="bucket=vmanep-use1-terraform-creation"
        -backend-config="key=state-eks.tfstate"
        -backend-config="region=us-east-1"
        -backend-config="workspace_key_prefix=testfabrizio"
        -backend-config="dynamodb_table=vmanep-use1-terraform-creation"
      args:
        chdir: ../terraform/eks
    - name: Apply EKS module
      cloud.terraform.terraform:
        project_path: ../terraform/eks
        workspace: testfabrizio
        state: present
        variables_files: ../../environment/tfvars/EKS.tfvars
      register: eks_outputs
    - debug: var=eks_outputs.stdout_lines
