name: Test

on:
  push:
    branches:
      - io-test
  pull_request:

permissions:
  contents: read
  id-token: write
  issues: write
  pull-requests: write

jobs:
  TruffleHog:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      
      - name: Install Act dependencies
        if: ${{ env.ACT}}  
        run: |
           apt-get update && apt-get install sudo -y

      - run: sudo id  

      - name: Install dependencies
        run: |
          
          sudo apt-get update
          sudo apt-get install -y curl build-essential git lsb-release

          if [ -f /etc/debian_version ]; then
            OS_CODENAME=$(lsb_release -cs 2>/dev/null || grep VERSION_CODENAME /etc/os-release | cut -d= -f2)
            OS_ID=$(grep ^ID= /etc/os-release | cut -d= -f2)
            
            if [ "$OS_ID" = "debian" ]; then
                echo "Using Debian repository..."
                DOCKER_REPO="https://download.docker.com/linux/debian"
            else
                echo "Using Ubuntu repository..."
                DOCKER_REPO="https://download.docker.com/linux/ubuntu"
            fi

            curl -fsSL https://download.docker.com/linux/$OS_ID/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
            
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] $DOCKER_REPO $OS_CODENAME stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

            sudo apt-get update
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io
          else
            echo "Error: Unsupported OS"
            exit 1
          fi

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          #ref: ${{ github.head_ref }}
          #ref: ${{ github.ref_name }}

      - name: TruffleHog OSS
        id: trufflehog
        uses: trufflesecurity/trufflehog@main
        continue-on-error: true
        with:
          #path: /home/ire/source/work/csf-vmo2-anep-terraform-environments
          #base: "${{ github.event.repository.default_branch }}"
          base: io-test
          head: io-test
          #base: ""
          #head: ${{ github.ref_name }}
          #extra_args: --debug
          #extra_args: --only-verified
          #extra_args: --results=verified
          #extra_args: --debug --only-verified
          extra_args: --no-verification

      - name: Scan Results Status
        if: steps.trufflehog.outcome == 'failure'
        run: exit 1