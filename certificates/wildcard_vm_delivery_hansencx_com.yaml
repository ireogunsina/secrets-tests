%{ for namespace in split(",", namespaces) }
---
apiVersion: v1
data:
  tls.crt: 
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNThKOS9pUTN3NERub2huQk1HUmlZTUhIaEIrRUZBTU55Ynh6dlY3YjRSOTJkaVltClZQbkNaMjFEMVQ5bGtYZ0VBQnQ3SU5pWVhJcXdQMXYzeTgzYmpTcklZMXdMOGxzUEJOaHVaNDlVeE52QWZoSkUKTVJqWDBnWHJrQ3loSVg4Mmcza29KTjA3KzRCRmIzeVFVVm1aSmVMRkZZZmV1aUNOeVhSaW13aHpVZVVPNDd0Ugo1eXlIdmxnQzVaSmpySXNSdGRzOS9KcnV4OEZhUnpLOXc4SkVud0ZmY01KMkc1UTZOcVpSUVorR0NUbml4THZ0Ck9EZGVzZFFnMFpuVDU1QWtWbEluWmpzbFZtM05VRlNJZlVwTXBrQ2plazYwNm9VRTUxZzhyeUs3QjRMSHFjNFAKQUx3WC9OMWQ5SWR2UmthQjFjNmhXRXVuM1h2d1NRR1dMSGlMbFFJREFRQUJBb0lCQVFDNnNIazlsMzgwQlVxUgowWjFGbGhlSlNZK21acHpHWWc5aFNtVVJUckJna0Mra3pPWmozUzAwazFmcEY4Q0JoZVB6RWpBRkxYVE9Wd25TCmdBc0VLVGVLWjhRMEJabTZDSS80bnorUVBHMVVocEJ3L2RYZ2x0cURYREY5V2ZZU1BaOTBHTXkxcFdFRUh6ZlAKcnMreU9ES2R5aVpvU2FLbzNFQmEzMTN1OU1ld1Z3TXdUd2Fkd0NTVDNwdzdzZXJVaEhaa3ZHSVAvb0kyNHcwUApRWitTQk1XalUxZlFJUG82OS9qOE1oQXBCTXZJd2Z6VkQxRmxRcUM4VjU4cEo3akJrRUM3YW1pODg4WFdiN3V6Ckl1M3Z3djVhSkRHNXhBaXNmZForT05QTjZOdlFUdTJYMm5ZNk9RSEhNTHhGcFl4eWNpUERSL3hmbXF1QWNpMnUKbEZsbDVoS2hBb0dCQU8xTVcyZzRMUm9NZ2RMVkpNTzlFOTlXWXMwUTRCNFN5UUM4MmVvVUpoYnpLaWk5endQeAo1QmpKMWsrWEFqRWlueHNpWDZlQnBpZzVPR2V3ckN0ZGFUeFVZQnhJWjMxTjBpWWRUYTVUSDJQbUM1VVJpdTRRCktlbkd0ZHFaanBkS00ybkNZL3F5QkdyRS9jQUNyb2ZqdmhFM0p4cW9VRnk5TFBxK09tY2dqaXFEQW9HQkFQb0cKWkVOUUUxR0N6WjBrR3dvODVzRGxOOGNaYlEvV1JMY3RaMDE3RC9ETnFnRHo3VG85N1h1dGkyWGxBNUdXQ25DZgoyNFg0NHBLd1dtcVJSODVIbmFTUTlud01XUVFLclFXNXpZeHlvVDFCNjlWdVhLYXd2TVl3TWFOL0p4VCtBVFVqCk8reVBXZ0pVcjJFcHFhU1ZBckFQWHZIV2VEdXIwbkMxWncyT2YzWUhBb0dCQUpzSllrY3JQTHhpSTRmZDNoRk0KdldrVGhhVzVPdFFyTGN3ZmxyaEt4Y0FFeXl5bkpsUExmRjE5c1ZsNnJlSHdYc2RabytsSzJZWTZMRklDcWRvRApRN2c0NERwYVM5TWdQd2JMNm03VXZCT0d2MVo3aWF1VVArNE85ODJFdWhhNlVmRHRJbWt1V1pod2IrRTlYMDVGClMyN3YrOHA4NFZSVi9NY3Q5ZlplM01PRkFvR0FjQkxuWktrRFQ5bGpVNW80cUxrdDhxK005aWwya3MvSVU1ZjkKbzJTVGU2eWxGUEpDbDRYazZ6aWFzTjBjWVdreFd0UzljV3RrSEw4Q2VKeVE1RzJEdzUzYmJ6V1Z2Vk1QeGU1SQpyamsvLzVhS0lVenNLU2cySmx5NkU0RE93d0V0QjJXNDJjeFVXNUVjWUdCdGs4SGJ4NUhNVEhtSHdhKytrQmt3CmpZb2Zwb2NDZ1lCUTg0U0k1U0JNTjM0L0FWMGNFVGcyZDFzaXlaeEdVSnhvMGxrNzV5eGdETWM4YlM4cEQ1TGoKdmhDeUFFZWF2Tk8xVStpMXBETWlIUnFFYkt5d0JHaUpZalhSLzJvaFRCdE95M3JBVGszUWxJZFUrNEsvOXVFUwpSYkZVVzl0QXFOWG5Ya1RQRWQ0SzgweVNPeXk5d3lwUStCYllNSUlNSXIxVmFyV0VwMTBEM1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  creationTimestamp: "2023-08-08T13:07:03Z"
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:data:
        .: {}
        f:tls.crt: {}
        f:tls.key: {}
    f:type: {}
    manager: kubectl
    operation: Update
    time: "2023-08-08T13:07:03Z"
  name: nginx-ingress-secret
  namespace: ${namespace}
  resourceVersion: "1422598"
  uid: 81f8406f-ab0b-4e07-8c4e-612e7fa99863
type: kubernetes.io/tls
%{ endfor }
